plugins {
	id 'java'
}

group = 'com.cte4.mac'
version = '1.0'
sourceCompatibility = '8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

allprojects {
    repositories {
        maven { url 'https://maven.aliyun.com/repository/public/' }
		maven { url 'https://maven.aliyun.com/repository/spring/'}
        mavenLocal()
        mavenCentral()
    }
}

dependencies {
	compile 'org.springframework.boot:spring-boot-starter-actuator:2.4.3'
	//a better way is to wrapper bytecode instrument in a separate jar and call it via Runtime.getRuntime().exec("java -jar another.jar bundle")
	compile 'org.jboss.byteman:byteman:4.0.13'
	compile 'org.jboss.byteman:byteman-install:4.0.13'
	compile 'org.jboss.byteman:byteman-submit:4.0.13'
	compileOnly 'org.projectlombok:lombok:1.18.20'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
	annotationProcessor 'org.projectlombok:lombok:1.18.20'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

jar {
    manifest {
        attributes (
                "Manifest-Version": "${version}",
                "Premain-Class": "com.cte4.mac.core.CoreAgent",
				"Agent-Class": "com.cte4.mac.core.CoreAgent",
				"Can-Redefine-Classes": "false",
				"Can-Retransform-Classes": "false"
        )  
    }
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}

test {
	useJUnitPlatform()
}
